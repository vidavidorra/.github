name: Release
on:
  workflow_call:
    inputs:
      nodeVersion:
        type: string
        default: '18'
        required: false
      appId:
        type: string
        description: 'GitHub App ID'
        default: ${{ vars.RELEASE_APP_ID }}
        required: false
      dockerUser:
        type: string
        default: ${{ vars.GH_PACKAGES_USERNAME }}
        description: 'Docker registry user'
        required: false
    secrets:
      privateKey:
        description: 'GitHub App private key'
        required: true
      npmToken:
        description: 'npm token'
        required: false
      dockerToken:
        description: 'Docker registry token'
        required: false
jobs:
  run:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          persist-credentials: false
      - name: Setup Node.js ${{ inputs.nodeVersion }}
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version: ${{ inputs.nodeVersion }}
      - name: Install project
        run: npm ci --ignore-scripts
      - name: Build
        run: npm run build
      - name: GitHub App token
        id: appToken
        uses: vidavidorra/github-app-token@3bfc462f0355ce6268121fdb6c140a8bb4c6839a # v1.0.1
        with:
          appId: ${{ inputs.appId }}
          privateKey: ${{ secrets.privateKey }}
          includeUserInformation: true
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.appToken.outputs.token }}
          GIT_AUTHOR_NAME: ${{ steps.appToken.outputs.username }}
          GIT_AUTHOR_EMAIL: ${{ steps.appToken.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.appToken.outputs.username }}
          GIT_COMMITTER_EMAIL: ${{ steps.appToken.outputs.email }}
          NPM_TOKEN: ${{ secrets.npmToken }}
          DOCKER_REGISTRY_USER: ${{ inputs.dockerUser }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.dockerToken }}
        run: npx --no-install semantic-release
