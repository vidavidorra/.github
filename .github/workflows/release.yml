name: Release
on:
  workflow_call:
    inputs:
      nodeVersion:
        type: string
        default: '22'
        required: false
      appId:
        type: string
        description: 'GitHub App ID'
        default: ${{ vars.RELEASE_APP_ID }}
        required: false
      dockerUser:
        type: string
        default: ${{ vars.GH_PACKAGES_USERNAME }}
        description: 'Docker registry user'
        required: false
    secrets:
      privateKey:
        description: 'GitHub App private key'
        required: true
      npmToken:
        description: 'npm token'
        required: false
      dockerToken:
        description: 'Docker registry token'
        required: false
jobs:
  run:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup Node.js ${{ inputs.nodeVersion }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ inputs.nodeVersion }}
      - name: Install project
        run: npm ci --ignore-scripts
      - name: Build
        run: npm run build
      - name: GitHub App token
        id: appToken
        uses: actions/create-github-app-token@0f859bf9e69e887678d5bbfbee594437cb440ffe # v2.1.0
        with:
          app-id: ${{ inputs.appId }}
          private-key: ${{ secrets.privateKey }}
      - name: GitHub App user
        id: appUser
        uses: vidavidorra/github-action-app-user@605e5b4063d677c57efac433e12bf2ef94f50e6e # v1.0.52
        with:
          token: ${{ steps.appToken.outputs.token }}
          slug: ${{ steps.appToken.outputs.app-slug }}
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.appToken.outputs.token }}
          GIT_AUTHOR_NAME: ${{ steps.appUser.outputs.username }}
          GIT_AUTHOR_EMAIL: ${{ steps.appUser.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.appUser.outputs.username }}
          GIT_COMMITTER_EMAIL: ${{ steps.appUser.outputs.email }}
          NPM_TOKEN: ${{ secrets.npmToken }}
          DOCKER_REGISTRY_USER: ${{ inputs.dockerUser }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.dockerToken }}
        run: npx --no-install semantic-release
